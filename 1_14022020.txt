ƒобро пожаловать в DrRacket, верси€ 7.5 [3m].
язык: racket, with debugging; memory limit: 128 MB.
> (define (fact n)
    (if (< n 2) 1 (* n fact(- n 1))))
> (define (fib n)
    (if (< n 3) 1 (+ (fib(- n 1)) (fib(- n 2)))))
> (fib 5)
5
> 
(fib 7)
13
> (define (tmp a b n m)
    (if (= n m) a
        (tmp b (+ a b) b (+ n 1))))
> (define (fib2 n)
    (tmp 1 1 n 1))
> (fib2 5)
2
> (fib2 7)
2
> (define (tmp a b n m)
    (if (= n m) a
        (tmp b (+ a b) n (+ m 1))))
> (define (fib2 n)
    (tmp 1 1 n 1))
> (fib2 7)
13
> (fib2 10)
55
> (define (some f x y)
    (f x y))
> (some + 3 5)
8
> (some * 3 5)
15
> (+ 1/3 1.5)
1.8333333333333333
> (define (sqr x)
    (* x x))
> (define getval(f x)
    (f x))
. define: bad syntax (multiple expressions after identifier) in: (define getval (f x) (f x))
> 
(define (getval(f x))
    (f x))
> (getval sqr 7)
. . getval: arity mismatch;
 the expected number of arguments does not match the given number
  given: 2
  arguments...:
> (getval (sqr 7))
. . x: undefined;
 cannot reference an identifier before its definition
> 
(getval sqr 7)
. . getval: arity mismatch;
 the expected number of arguments does not match the given number
  given: 2
  arguments...:
> (define getval(f x)
    (f x))
. define: bad syntax (multiple expressions after identifier) in: (define getval (f x) (f x))
> (display (+ 5 3))
8
> (define sqr(x)
    (* x x))
. define: bad syntax (multiple expressions after identifier) in: (define sqr (x) (* x x))
> (define (sqr x)
    (* x x))
> (sqr 3)
9
> (define  gettab(f x1 x2 step)
    (f x1 x2 step)) 
. define: bad syntax (multiple expressions after identifier) in: (define gettab (f x1 x2 step) (f x1 x2 step))
> (define  gettab(f x1 x2 step)
    (if (<= x1 x2)
        (begin (display x1)
               (display (f x1))
               (nextline)
               (gettab f (+ x1 step) x2 step))
        (none)))
. define: bad syntax (multiple expressions after identifier) in: (define gettab (f x1 x2 step) (if (<= x1 x2) (begin (display x1) (display (f x1)) (nextline) (gettab f (+ x1 step) x2 step)) (none)))
> (define  gettab(f x1 x2 step)
    (if (<= x1 x2)
        (begin (display x1)
               (display (f x1))
               (nextline)
               (gettab f (+ x1 step) x2 step))
        (void)))
. define: bad syntax (multiple expressions after identifier) in: (define gettab (f x1 x2 step) (if (<= x1 x2) (begin (display x1) (display (f x1)) (nextline) (gettab f (+ x1 step) x2 step)) (void)))
> (define  gettab(f x1 x2 step)
    (if (<= x1 x2)
        (begin (display x1)
               (display (f x1))
               (newline)
               (gettab f (+ x1 step) x2 step))
        (void)))
. define: bad syntax (multiple expressions after identifier) in: (define gettab (f x1 x2 step) (if (<= x1 x2) (begin (display x1) (display (f x1)) (newline) (gettab f (+ x1 step) x2 step)) (void)))
> (define (gettab(f x1 x2 step))
    (if (<= x1 x2)
        (begin (display x1)
               (display (f x1))
               (newline)
               (gettab f (+ x1 step) x2 step))
        (void)))
. define: not an identifier, identifier with default, or keyword for procedure argument in: (f x1 x2 step)
> (define (gettab f x1 x2 step)
    (if (<= x1 x2)
        (begin (display x1)
               (display (f x1))
               (newline)
               (gettab f (+ x1 step) x2 step))
        (void)))
> (gettab sqr 1 5 1)
11
24
39
416
525
> (define (gettab f x1 x2 step)
    (if (<= x1 x2)
        (begin (display x1)
               (display " ")
               (display (f x1))
               (newline)
               (gettab f (+ x1 step) x2 step))
        (void)))
> (gettab sqr 1 5 1)
1 1
2 4
3 9
4 16
5 25
> (gettab sqr 1 2 0.2)
1 1
1.2 1.44
1.4 1.9599999999999997
1.5999999999999999 2.5599999999999996
1.7999999999999998 3.2399999999999993
1.9999999999999998 3.999999999999999
> 